---
###################################################################################################
# HEADER
###################################################################################################

"$schema": https://github.com/bloomberg/powerfulseal/blob/master/powerfulseal/policy/ps-schema.yaml
title: PowerfulSeal configuration schema
description: >
  The following configuration options document all features available
  for writing policy files with PowerfulSeal.
type: object


###################################################################################################
# PROPERTIES
###################################################################################################

properties:
  config:
    type: object
    "$ref": "#/definitions/config"
    description: General configuration of this policy.
  scenarios:
    type: array
    description: >
      An array of scenarios, each describing a complete chaos experiment.
    items:
      type: object
      "$ref": "#/definitions/scenario"



###################################################################################################
# DEFINITIONS
###################################################################################################

definitions:

  config:
    description: "Configure the current policy"
    type: object
    additionalProperties: false
    properties:
      runStrategy:
        type: object
        "$ref": "#/definitions/runStrategy"

  runStrategy:
    description: "Configure how the scenarios are run"
    type: object
    additionalProperties: false
    properties:
      strategy:
        type: string
        description: >
          Affects how the scenarios are executed.
          The default "round-robin" iterates over the every scenario in the order they were defined.
          Random ("random") pick a random scenario from the available pool every time.
        default: round-robin
        enum:
        - round-robin
        - random
      runs:
        description: >
          If set, it will exit after the given number of scenario runs. By default, it continues forever.
        type: number
        minimum: 1
      minSecondsBetweenRuns:
        description: >
          The Seal waits a randomized amount of time before executing the scenarios.
          This sets the MIN number of seconds that it will wait.
        type: number
        minimum: 0
        default: 30
      maxSecondsBetweenRuns:
        description: >
          The Seal waits a randomized amount of time before executing the scenarios.
          This sets the MAX number of seconds that it will wait.
        type: number
        minimum: 0
        default: 300

  scenario:
    description: >
      A scenario contains all the steps necessary to prepare, implement and validate a chaos engineering experiment.
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
        description: >
          A brief, descriptive name of the scenario. Will be used to identify the scenario in logs.
        minLength: 3
        maxLength: 30
      description:
        type: string
        description: >
          A longer description, helping to understand what the scenario is doing when reading the yaml file.
          Optional.
      steps:
        type: array
        description: >
          The sequence of events to prepare, validate, execute and analyse the chaos engineering experiment.
        items:
          oneOf:
          - "$ref": "#/definitions/podAction"
          - "$ref": "#/definitions/nodeAction"
    required:
    - name
    - steps


  nodeAction:
    description: >
      Match, filter and action on nodes in your kubernetes cluster.
      It can integrate with your cloud provider and take nodes up and down to simulate VMs going down.
      If you're running in SSH mode, it can also execute various commands on hosts. And much more!
      See below for mode details.
    type: object
    additionalProperties: false
    properties:
      matches:
        type: array
        description: >
          An array of match criteria to select a set of nodes. Will be deduplicated.
        items:
          oneOf:
          - "$ref": "#/definitions/filterPropertyNode"
      filters:
        type: array
        description: >
          An array of filters, which will be applied in the defined order.
        items:
          type: object
          oneOf:
          - "$ref": "#/definitions/filterPropertyNode"
          - "$ref": "#/definitions/filterDayTime"
          - "$ref": "#/definitions/filterRandomSample"
          - "$ref": "#/definitions/filterProbability"
      actions:
        type: array
        description: >
          An array of actions, which will be executed on each node.
        items:
          type: object
          oneOf:
          - "$ref": "#/definitions/actionStartNode"
          - "$ref": "#/definitions/actionStopNode"
          - "$ref": "#/definitions/actionExecuteNode"
          - "$ref": "#/definitions/actionWait"
    required:
    - matches
    - actions

  podAction:
    description: >
      Match, filter and action on pods in your kubernetes cluster.
      Matchers create the initial set.
      That set is de-duplicated and passed on to the filters.
      Filters can exclude items.
      Whatever is passed through the filters will then be actioned with every action in the action array
      See below for the details of the configuration available.
    type: object
    additionalProperties: false
    properties:
      matches:
        type: array
        description: >
          An array of match criteria to select a set of pods. Will be deduplicated.
        items:
          oneOf:
          - "$ref": "#/definitions/matchPodNamespace"
          - "$ref": "#/definitions/matchPodDeploymentAndNamespace"
          - "$ref": "#/definitions/matchPodLabelsAndNamespace"
      filters:
        type: array
        description: >
          An array of filters to only select certain pods from the initial set.
        items:
          type: object
          oneOf:
          - "$ref": "#/definitions/filterPropertyPod"
          - "$ref": "#/definitions/filterDayTime"
          - "$ref": "#/definitions/filterRandomSample"
          - "$ref": "#/definitions/filterProbability"
      actions:
        type: array
        description: >
          An array of actions to be applied to each pod from the set.
        items:
          type: object
          oneOf:
          - "$ref": "#/definitions/actionKillPod"
          - "$ref": "#/definitions/actionWait"
    required:
    - matches
    - actions


###################################################################################################
# MATCHERS
###################################################################################################

  matchPodNamespace:
    type: object
    additionalProperties: false
    properties:
      namespace:
        type: object
        additionalProperties: false
        properties:
          name:
            type: string
        required:
        - name
    required:
    - namespace

  matchPodDeploymentAndNamespace:
    type: object
    additionalProperties: false
    properties:
      deployment:
        type: object
        additionalProperties: false
        properties:
          name:
            type: string
          namespace:
            type: string
        required:
        - name
        - namespace
    required:
    - deployment

  matchPodLabelsAndNamespace:
    type: object
    additionalProperties: false
    properties:
      labels:
        type: object
        additionalProperties: false
        properties:
          selector:
            type: string
          namespace:
            type: string
        required:
        - selector
        - namespace
    required:
    - labels


###################################################################################################
# FILTERS
###################################################################################################

  filterRandomSample:
    type: object
    additionalProperties: false
    properties:
      randomSample:
        type: object
        additionalProperties: false
        properties:
          size:
            type: number
          ratio:
            type: number
    required:
    - randomSample

  filterProbability:
    type: object
    additionalProperties: false
    properties:
      probability:
        type: object
        additionalProperties: false
        properties:
          probabilityPassAll:
            type: number
        required:
        - probabilityPassAll
    required:
    - probability

  filterDayTime:
    type: object
    additionalProperties: false
    properties:
      dayTime:
        type: object
        additionalProperties: false
        properties:
          onlyDays:
            type: array
            items:
              type: string
              enum:
              - monday
              - tuesday
              - wednesday
              - thursday
              - friday
              - saturday
              - sunday
          startTime:
            type: object
            "$ref": "#/definitions/time"
          endTime:
            type: object
            "$ref": "#/definitions/time"
        required:
        - onlyDays
        - startTime
        - endTime
    required:
    - dayTime

  filterPropertyNode:
    type: object
    additionalProperties: false
    properties:
      property:
        type: object
        additionalProperties: false
        properties:
          name:
            type: string
            enum:
            - name
            - ip
            - group
            - az
            - state
          value:
            type: string
        required:
        - name
        - value
    required:
    - property

  filterPropertyPod:
    type: object
    additionalProperties: false
    properties:
      property:
        type: object
        additionalProperties: false
        properties:
          name:
            type: string
            enum:
            - name
            - state
          value:
            type: string
        required:
        - name
        - value
    required:
    - property


###################################################################################################
# ACTIONS
###################################################################################################

  actionStartNode:
    type: object
    additionalProperties: false
    properties:
      start:
        type:
        - object
        - 'null'
        additionalProperties: false
    required:
    - start

  actionStopNode:
    type: object
    additionalProperties: false
    properties:
      stop:
        type: object
        additionalProperties: false
        properties:
          force:
            type: boolean
    required:
    - stop

  actionExecuteNode:
    type: object
    additionalProperties: false
    properties:
      execute:
        type: object
        additionalProperties: false
        properties:
          cmd:
            type: string
        required:
        - cmd
    required:
    - execute

  actionWait:
    type: object
    additionalProperties: false
    properties:
      wait:
        type: object
        additionalProperties: false
        properties:
          seconds:
            type: number
        required:
        - seconds
    required:
    - wait

  actionKillPod:
    type: object
    additionalProperties: false
    properties:
      kill:
        type: object
        additionalProperties: false
        properties:
          probability:
            type: number
          force:
            type: boolean
    required:
    - kill


###################################################################################################
# MISC
###################################################################################################

  time:
    type: object
    additionalProperties: false
    properties:
      hour:
        type: number
      minute:
        type: number
      second:
        type: number
    required:
    - hour
    - minute
    - second
